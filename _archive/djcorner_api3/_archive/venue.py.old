from pymongo import Connection

def _get_venue_col( connection ):
	
	# connection...
	if not connection:
        	connection = Connection()

        # dbase...
        db = connection['djcorner'] 

        # collection...
        venues = db['venues']

	return venues

# 
# func to add venue...
#
def add_venue( connection, name ):
        
        # collection...
        venues = _get_venue_col( connection )

        # create an venue...
        venue = { "name":"A really cool venue" }

        # add to collection...
        oid = venues.insert( venue )

	return oid

#
# func to get venues...
#
def get_venues( connection, paging ):
	
        # collection...
        venues = _get_venue_col( connection )

	# iterate over collection...
	retv = []
	for venue in venues.find():
		retv.append( venue )

	return retv

#
# func to delete venue...
#
def delete_venue( connection, oid ):

        venues = _get_venue_col( connection )

        venue = {"_id":oid }

        status = venues.remove( venue, True)

        if status["err"]:
                return False
        else:
                return True


#
# unit test...
#
if __name__ == "__main__":

	print "INFO: venue: unit-test..."

	# clear collection...
	venues = _get_venue_col( None )
	venues.remove()

	# create venue...
	oid = add_venue( None, "a venue" )
	print "INFO: venue: add_venue: result->", oid

	# update venue...

	# print all venus...
	venues = get_venues( None, None )
	print "INFO: venue: get_venues: result->", venues

	# delete the venue...
	status = delete_venue( None, oid )
	print "INFO: venue: delete_venue: result->", status

	# print all venus...
	venues = get_venues( None, None )
	print "INFO: venue: get_venues: result->", venues

	print "INFO: Done."
	
